// <auto-generated />
using System;
using DbMigrations.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbMigrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateLanguageEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LanguageLevelId");

                    b.ToTable("CandidateLanguages");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateProccesEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FeedbackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TestResult")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("FeedbackId");

                    b.HasIndex("StatusId");

                    b.ToTable("CandidatesProcceses");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateProjectRoleEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CandidateProjectRoles");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateSandboxEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateProccesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateProjectRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidatesProccesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SandboxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateProjectRoleId");

                    b.HasIndex("CandidatesProccesId");

                    b.HasIndex("SandboxId");

                    b.HasIndex("TeamId");

                    b.ToTable("CandidateSandboxes");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateTechSkillEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("SkillId");

                    b.ToTable("CandidateTechSkills");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.FeedbackEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserReview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.FunctionalRoleEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FunctionalRoles");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.LanguageEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.LanguageLevelEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LanguageLevels");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.RatingEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SandBoxTechSkillEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SandboxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SandboxId");

                    b.HasIndex("SkillId");

                    b.ToTable("SandBoxTechSkills");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SandboxEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndRegistration")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxCandidates")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartRegistration")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sandboxes");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SkillEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.StatusEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.TeamEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidateSandboxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SandboxId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateSandboxId");

                    b.HasIndex("SandboxId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserLanguageEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LanguageLevelsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LanguageLevelsId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLanguages");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserRoleEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FunctionalRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserSandBoxEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SandBoxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserEntityModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SandBoxId");

                    b.HasIndex("UserEntityModelId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserSandBoxes");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserTeamEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserSandBoxEntityModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserSandBoxId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserSandBoxEntityModelId");

                    b.HasIndex("UserSandBoxId");

                    b.ToTable("UserTeams");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserTechSkillEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTechSkills");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateLanguageEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.CandidateEntityModel", "Candidate")
                        .WithMany("CandidateLanguages")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.LanguageEntityModel", "Language")
                        .WithMany("CandidateLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.LanguageLevelEntityModel", "LanguageLevel")
                        .WithMany("CandidateLanguages")
                        .HasForeignKey("LanguageLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Language");

                    b.Navigation("LanguageLevel");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateProccesEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.CandidateEntityModel", "Candidate")
                        .WithMany("CandidatesProcceses")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.FeedbackEntityModel", "Feedback")
                        .WithMany("CandidateProcceses")
                        .HasForeignKey("FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.StatusEntityModel", "Status")
                        .WithMany("CandidatesProcceses")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Feedback");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateSandboxEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.CandidateProjectRoleEntityModel", "CandidateProjectRole")
                        .WithMany("CandidateSandboxes")
                        .HasForeignKey("CandidateProjectRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.CandidateProccesEntityModel", "CandidatesProcces")
                        .WithMany()
                        .HasForeignKey("CandidatesProccesId");

                    b.HasOne("DbMigrations.EntityModels.SandboxEntityModel", "Sandbox")
                        .WithMany("CandidateSandboxes")
                        .HasForeignKey("SandboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.TeamEntityModel", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CandidateProjectRole");

                    b.Navigation("CandidatesProcces");

                    b.Navigation("Sandbox");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateTechSkillEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.CandidateEntityModel", "Candidate")
                        .WithMany("CandidateTechSkills")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.SkillEntityModel", "Skill")
                        .WithMany("CandidateTechSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.FeedbackEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.RatingEntityModel", "Rating")
                        .WithMany("Feedbacks")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.UserEntityModel", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.RatingEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.SkillEntityModel", "Skill")
                        .WithMany("Ratings")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SandBoxTechSkillEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.SandboxEntityModel", "Sandbox")
                        .WithMany("SandBoxTechSkills")
                        .HasForeignKey("SandboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.SkillEntityModel", "Skill")
                        .WithMany("SandBoxTechSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sandbox");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.TeamEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.CandidateSandboxEntityModel", "CandidateSandbox")
                        .WithMany()
                        .HasForeignKey("CandidateSandboxId");

                    b.HasOne("DbMigrations.EntityModels.SandboxEntityModel", "Sandbox")
                        .WithMany("Teams")
                        .HasForeignKey("SandboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CandidateSandbox");

                    b.Navigation("Sandbox");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserLanguageEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.LanguageEntityModel", "Language")
                        .WithMany("UserLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.LanguageLevelEntityModel", "LanguageLevels")
                        .WithMany("UserLanguages")
                        .HasForeignKey("LanguageLevelsId");

                    b.HasOne("DbMigrations.EntityModels.UserEntityModel", "User")
                        .WithMany("UserLanguages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("LanguageLevels");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserRoleEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.FunctionalRoleEntityModel", "FunctionalRole")
                        .WithMany("UserRoles")
                        .HasForeignKey("FunctionalRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.UserEntityModel", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserSandBoxEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.SandboxEntityModel", "Sandbox")
                        .WithMany("UserSandboxes")
                        .HasForeignKey("SandBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.UserEntityModel", null)
                        .WithMany("UserSanboxes")
                        .HasForeignKey("UserEntityModelId");

                    b.HasOne("DbMigrations.EntityModels.UserEntityModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.UserRoleEntityModel", "UserRole")
                        .WithMany("UserSanboxes")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sandbox");

                    b.Navigation("User");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserTeamEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.TeamEntityModel", "Team")
                        .WithMany("UserTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.UserSandBoxEntityModel", null)
                        .WithMany("Teams")
                        .HasForeignKey("UserSandBoxEntityModelId");

                    b.HasOne("DbMigrations.EntityModels.UserSandBoxEntityModel", "UserSandBox")
                        .WithMany()
                        .HasForeignKey("UserSandBoxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("UserSandBox");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserTechSkillEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.SkillEntityModel", "Skill")
                        .WithMany("UserTechSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.UserEntityModel", "User")
                        .WithMany("UserTechSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateEntityModel", b =>
                {
                    b.Navigation("CandidateLanguages");

                    b.Navigation("CandidatesProcceses");

                    b.Navigation("CandidateTechSkills");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CandidateProjectRoleEntityModel", b =>
                {
                    b.Navigation("CandidateSandboxes");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.FeedbackEntityModel", b =>
                {
                    b.Navigation("CandidateProcceses");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.FunctionalRoleEntityModel", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.LanguageEntityModel", b =>
                {
                    b.Navigation("CandidateLanguages");

                    b.Navigation("UserLanguages");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.LanguageLevelEntityModel", b =>
                {
                    b.Navigation("CandidateLanguages");

                    b.Navigation("UserLanguages");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.RatingEntityModel", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SandboxEntityModel", b =>
                {
                    b.Navigation("CandidateSandboxes");

                    b.Navigation("SandBoxTechSkills");

                    b.Navigation("Teams");

                    b.Navigation("UserSandboxes");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SkillEntityModel", b =>
                {
                    b.Navigation("CandidateTechSkills");

                    b.Navigation("Ratings");

                    b.Navigation("SandBoxTechSkills");

                    b.Navigation("UserTechSkills");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.StatusEntityModel", b =>
                {
                    b.Navigation("CandidatesProcceses");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.TeamEntityModel", b =>
                {
                    b.Navigation("UserTeams");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserEntityModel", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("UserLanguages");

                    b.Navigation("UserRoles");

                    b.Navigation("UserSanboxes");

                    b.Navigation("UserTechSkills");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserRoleEntityModel", b =>
                {
                    b.Navigation("UserSanboxes");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserSandBoxEntityModel", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
